{"version":3,"file":"directive.js","sourceRoot":"","sources":["../../src/directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAqB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC9G,OAAO,OAAO,CAAC;AACf,OAAO,qBAAqB,CAAC;;AAQ7B,MAAM,OAAO,kBAAkB;IAciB;IAblC,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;IACjC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;IAC1C,QAAQ,GAAQ,EAAE,CAAC;IACnB,SAAS,GAAY,KAAK,CAAC;IAC3B,MAAM,GAAW,SAAS,CAAC;IAC3B,KAAK,GAAQ,MAAM,CAAC;IACpB,kBAAkB,GAAY,IAAI,CAAC;IACnC,uBAAuB,GAAW,CAAC,CAAC;IACpC,KAAK,GAAW,EAAE,CAAC;IACnB,MAAM,CAAM;IACZ,OAAO,CAAM;IACb,aAAa,CAAM;IAEnB,YAAY,UAAsB,EAAU,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QACpD,IAAI,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE;YAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,QAAQ,CAAC;IAC3C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED,IAAI;QACA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,UAAU;QACN,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC;YAC1B,OAAO;QACX,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;aAAM,CAAC;YACJ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,CAAC;gBAC7B,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACrC,CAAC;YAED,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;gBACjC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;oBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,IAAa,OAAO,CAAC,OAAY;QAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,IAAa,QAAQ,CAAC,QAAa;QAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,IAAa,KAAK,CAAC,KAAU;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,KAAK,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,IAAa,IAAI,CAAC,IAAS;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,OAAO,CAAC,IAAS;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/D,CAAC;IACL,CAAC;IAED,IACI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,IAAI,IAAI,CAAC,IAAY;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,OAAO,CAAC,IAAS;QACb,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE,CAAC;YACtB,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;gBACtC,IAAI,GAAG,EAAE,CAAC;YACd,CAAC;YAED,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE,CAAC;gBACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;YACjC,CAAC;QACL,CAAC;IACL,CAAC;IAED,IAAa,iBAAiB,CAAC,MAAW;QACtC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;IACrC,CAAC;IAED,IAAa,sBAAsB,CAAC,GAAW;QAC3C,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,yBAAyB,CAAC,GAAW;QACjC,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;IACvC,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;wGAxIQ,kBAAkB;4FAAlB,kBAAkB;;4FAAlB,kBAAkB;kBAH9B,SAAS;mBAAC;oBACP,QAAQ,EAAE,cAAc;iBAC3B;oGAEa,WAAW;sBAApB,MAAM;gBACG,UAAU;sBAAnB,MAAM;gBAqEM,OAAO;sBAAnB,KAAK;gBAKO,QAAQ;sBAApB,KAAK;gBAKO,KAAK;sBAAjB,KAAK;gBAKO,IAAI;sBAAhB,KAAK;gBAcF,IAAI;sBADP,KAAK;gBAuBO,iBAAiB;sBAA7B,KAAK;gBAIO,sBAAsB;sBAAlC,KAAK","sourcesContent":["import { Directive, EventEmitter, Output, ElementRef, Input, OnInit, OnDestroy, NgZone } from \"@angular/core\";\r\nimport \"brace\";\r\nimport \"brace/theme/monokai\";\r\n\r\n\r\ndeclare var ace: any;\r\n\r\n@Directive({\r\n    selector: '[ace-editor]'\r\n})\r\nexport class AceEditorDirective implements OnInit, OnDestroy {\r\n    @Output() textChanged = new EventEmitter();\r\n    @Output() textChange = new EventEmitter();\r\n    _options: any = {};\r\n    _readOnly: boolean = false;\r\n    _theme: string = \"monokai\";\r\n    _mode: any = \"html\";\r\n    _autoUpdateContent: boolean = true;\r\n    _durationBeforeCallback: number = 0;\r\n    _text: string = \"\";\r\n    editor: any;\r\n    oldText: any;\r\n    timeoutSaving: any;\r\n\r\n    constructor(elementRef: ElementRef, private zone: NgZone) {\r\n        let el = elementRef.nativeElement;\r\n        this.zone.runOutsideAngular(() => {\r\n            this.editor = ace[\"edit\"](el);\r\n        });\r\n        this.editor.$blockScrolling = Infinity;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.initEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.editor.destroy();\r\n    }\r\n\r\n    init() {\r\n        this.editor.setOptions(this._options || {});\r\n        this.editor.setTheme(`ace/theme/${this._theme}`);\r\n        this.setMode(this._mode);\r\n        this.editor.setReadOnly(this._readOnly);\r\n    }\r\n\r\n    initEvents() {\r\n        this.editor.on('change', () => this.updateText());\r\n        this.editor.on('paste', () => this.updateText());\r\n    }\r\n\r\n    updateText() {\r\n        let newVal = this.editor.getValue();\r\n        if (newVal === this.oldText) {\r\n            return;\r\n        }\r\n        if (!this._durationBeforeCallback) {\r\n            this._text = newVal;\r\n            this.zone.run(() => {\r\n                this.textChange.emit(newVal);\r\n                this.textChanged.emit(newVal);\r\n            });\r\n        } else {\r\n            if (this.timeoutSaving != null) {\r\n                clearTimeout(this.timeoutSaving);\r\n            }\r\n\r\n            this.timeoutSaving = setTimeout(() => {\r\n                this._text = newVal;\r\n                this.zone.run(() => {\r\n                    this.textChange.emit(newVal);\r\n                    this.textChanged.emit(newVal);\r\n                });\r\n                this.timeoutSaving = null;\r\n            }, this._durationBeforeCallback);\r\n        }\r\n        this.oldText = newVal;\r\n    }\r\n\r\n    @Input() set options(options: any) {\r\n        this._options = options;\r\n        this.editor.setOptions(options || {});\r\n    }\r\n\r\n    @Input() set readOnly(readOnly: any) {\r\n        this._readOnly = readOnly;\r\n        this.editor.setReadOnly(readOnly);\r\n    }\r\n\r\n    @Input() set theme(theme: any) {\r\n        this._theme = theme;\r\n        this.editor.setTheme(`ace/theme/${theme}`);\r\n    }\r\n\r\n    @Input() set mode(mode: any) {\r\n        this.setMode(mode);\r\n    }\r\n\r\n    setMode(mode: any) {\r\n        this._mode = mode;\r\n        if (typeof this._mode === 'object') {\r\n            this.editor.getSession().setMode(this._mode);\r\n        } else {\r\n            this.editor.getSession().setMode(`ace/mode/${this._mode}`);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(text: string) {\r\n        this.setText(text);\r\n    }\r\n\r\n    setText(text: any) {\r\n        if (this._text !== text) {\r\n            if (text === null || text === undefined) {\r\n                text = \"\";\r\n            }\r\n\r\n            if (this._autoUpdateContent === true) {\r\n                this._text = text;\r\n                this.editor.setValue(text);\r\n                this.editor.clearSelection();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input() set autoUpdateContent(status: any) {\r\n        this._autoUpdateContent = status;\r\n    }\r\n\r\n    @Input() set durationBeforeCallback(num: number) {\r\n        this.setDurationBeforeCallback(num);\r\n    }\r\n\r\n    setDurationBeforeCallback(num: number) {\r\n        this._durationBeforeCallback = num;\r\n    }\r\n\r\n    get aceEditor() {\r\n        return this.editor;\r\n    }\r\n}\r\n"]}